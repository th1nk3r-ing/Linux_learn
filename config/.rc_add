# ubuntu's bash & zsh persional configeriation
# @think3r 2020-07-01 00:06:07

# print color alias
export prt_Bold=$(tput bold)
export prt_Black=$(tput setaf 0)
export prt_Red=$(tput setaf 1)
export prt_Green=$(tput setaf 2)
export prt_Yellow=$(tput setaf 3)
export prt_Blue=$(tput setaf 4)
export prt_Cyan=$(tput setaf 6)
export prt_White=$(tput setaf 7)
export prt_End=$(tput sgr0)

alias ll="ls -alhF --time-style='+%Y/%m/%d_%H:%M:%S'"
alias la='ls -A'
alias l='ls -CF'
alias clc='clear'

# if is WSL / MACOS, add some platform-unique-alias
if (uname -a | grep "Microsoft" >/dev/null) ;then      # WSL
    alias e.='explorer.exe .'

    # 挂载网络磁盘
    # sudo mount -t drvfs D: /mnt/d
    # 自动挂载网络磁盘
    #if [ ! -f "/mnt/u/.bashrc" ]; then
    #	echo passwd | sudo -S mount -t drvfs U: /mnt/u
    #	echo -e $prt_Green "mount netdisk U success!" $prt_End
    #fi

    #取消windows路径中的文件夹背景色
    if [ -f "$HOME/.dir_colors" ]; then
        eval `dircolors "$HOME/.dir_colors"`
    fi

	# [oh-my-zsh Tab completion not using dir_colors #1563](https://github.com/ohmyzsh/ohmyzsh/issues/1563)
    if (echo "$SHELL" | grep "zsh" >/dev/null) && [ -d "$HOME/.oh-my-zsh" ]; then
        # echo -e "$prt_Red fix zsh table color $prt_End"
        zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
    fi
elif (uname -a | grep "Darwin" >/dev/null) ;then       # MACOS
    alias e.='open .'
    if command -v gls > /dev/null; then
        alias gll="gls -alhF --time-style='+%Y/%m/%d_%H:%M:%S' --color=auto"   # MACOS gnu-ls;
    fi
    alias ll="ls -alhFGT"  # MACOS ll 特殊化;
    #echo "this is $prt_YellowLine macos $prt_End, reg open ."
    export LC_ALL=en_US.UTF-8
    export LANG=en_US.UTF-8
fi

# some more ls aliases
if command -v exa > /dev/null; then
	alias el="exa -aHlFg --time-style=long-iso"
fi

if command -v trash > /dev/null; then
    alias rm=trash
	alias rl='ls ~/.Trash'
	undelfile() {
        mv -i ~/.Trash/$@ ./
    }
    alias ur=undelfile
fi


# add android-termux command;
if [ -f ~/termux_sh.sh ]; then
    . ~/termux_sh.sh
fi

#autojump
if [ -d "$HOME/.autojump" ]; then
    [[ -s "$HOME/.autojump/etc/profile.d/autojump.sh" ]] && source "$HOME/.autojump/etc/profile.d/autojump.sh"
fi

# 函数: 使用命令得到 git 项目的分支名字;
function parse_git_branch_and_add_brackets {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\ \[\1\]/'
}

# PS1 相关
if (echo "$SHELL" | grep "bash" >/dev/null); then
    echo -e "current shell is $prt_Yellow bash $prt_End"
    #设置ssh连接时的shell配色方案为 ubuntu 自带(加入了显示 git 分支的功能;)
    #PS1="\h:\W \u\[\033[0;32m\]\$(parse_git_branch_and_add_brackets) \[\033[0m\]\$ "
    #PS1="${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\$(parse_git_branch_and_add_brackets) \[\033[0m\]\$ "
    PS1="${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\[\033[0;32m\]\$(parse_git_branch_and_add_brackets)\[\033[0m\]\$ "
elif (echo "$SHELL" | grep "zsh" >/dev/null); then
	# 关闭 zsh shell 提示音
	unsetopt beep
    # oh-my-zsh 默认主题的情况下, 修改 PS1
    if [ -d "$HOME/.oh-my-zsh" ] && [ "$ZSH_THEME" = "robbyrussell" ]; then
        PROMPT='%{$fg_bold[red]%}-> %{$fg_bold[green]%}%p%{$fg[cyan]%}%~ %{$fg_bold[blue]%}$(git_prompt_info)%{$fg_bold[blue]%}% %{$fg[magenta]%}%(?..%?%2v)%{$reset_color%}#: '
    fi
fi

if (echo "$SHELL" | grep "zsh" >/dev/null); then
    # oh-my-zsh 的自动补全插件
    #if [ -d "$HOME/.oh-my-zsh/plugins/incr" ]; then
    #    source "$HOME/.oh-my-zsh/plugins/incr/incr*.zsh"
    #    #echo -e "have is $prt_Red incr file $prt_End"
    #fi

    echo -e "current shell is $prt_Yellow zsh $prt_End"
fi

# colourful man page
export LESS_TERMCAP_mb=$(printf "\e[1;31m")
export LESS_TERMCAP_md=$(printf "\e[1;31m")
export LESS_TERMCAP_me=$(printf "\e[0m")
export LESS_TERMCAP_se=$(printf "\e[0m")
export LESS_TERMCAP_so=$(printf "\e[1;44;33m")
export LESS_TERMCAP_ue=$(printf "\e[0m")
export LESS_TERMCAP_us=$(printf "\e[1;32m")


# 自己的可执行文件本地路径
if [ -d "$HOME/bin" ]; then
    # add adb path; 如果不加入, 则需要使用 adb.exe 代替 adb
    my_adb_path="$HOME/bin/platform-tools"
    if [ -d "$my_adb_path" ]; then
        PATH="$PATH:$my_adb_path"
    fi
    # go
	my_go_path="$HOME/bin/go/bin"
	if [ -d "$my_go_path" ]; then
	    PATH="$PATH:$my_go_path"
	fi
fi

# git repo 使用清华源
if command -v repo > /dev/null; then
    export REPO_URL='https://mirrors.tuna.tsinghua.edu.cn/git/git-repo'
fi

#set java env
if [ -d "$HOME/bin/jdk-14.0.2" ];then
    export JAVA_HOME="$HOME/bin/jdk-14.0.2/"
    export JRE_HOME=${JAVA_HOME}
    export CLASSPATH=.:${JAVA_HOME}/lib
    export PATH=${JAVA_HOME}/bin:$PATH
elif [ -d "$HOME/bin/jdk-15.jdk" ];then
	export JAVA_HOME="$HOME/bin/jdk-15.jdk/Contents/Home/"
	export JRE_HOME=${JAVA_HOME}
	export CLASSPATH=.:${JAVA_HOME}/lib
	export PATH=${JAVA_HOME}/bin:$PATH
elif [ -d "$HOME/bin/jdk-16.0.1.jdk" ];then
    export JAVA_HOME="$HOME/bin/jdk-16.0.1.jdk/Contents/Home/"
    export JRE_HOME=${JAVA_HOME}
	export CLASSPATH=.:${JAVA_HOME}/lib
	export PATH=${JAVA_HOME}/bin:$PATH
fi

if (uname -a | grep "Darwin" > /dev/null) ;then
	if [ -d "/usr/local/opt/binutils/bin" ]; then
		export PATH="$PATH:/usr/local/opt/binutils/bin"
	fi
    if [ -d "/usr/local/opt/openjdk/bin/" ]; then
        #PATH="/usr/local/opt/openjdk/bin/:$PATH"
    fi
fi

if [ -f "$HOME/.myPath_add" ]; then
	source ~/.myPath_add
fi

#export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64/bin/
